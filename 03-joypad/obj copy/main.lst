                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.9.0 #11195 (MINGW64)
                              4 ;--------------------------------------------------------
                              5 	.module main
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _scroll_sprite
                             13 	.globl _move_sprite
                             14 	.globl _set_sprite_tile
                             15 	.globl _set_sprite_data
                             16 	.globl _delay
                             17 	.globl _Character
                             18 ;--------------------------------------------------------
                             19 ; special function registers
                             20 ;--------------------------------------------------------
                             21 ;--------------------------------------------------------
                             22 ; ram data
                             23 ;--------------------------------------------------------
                             24 	.area _DATA
   0000                      25 _Character::
   0000                      26 	.ds 32
                             27 ;--------------------------------------------------------
                             28 ; absolute external ram data
                             29 ;--------------------------------------------------------
                             30 	.area _DABS (ABS)
                             31 ;--------------------------------------------------------
                             32 ; global & static initialisations
                             33 ;--------------------------------------------------------
                             34 	.area _HOME
                             35 	.area _GSINIT
                             36 	.area _GSFINAL
                             37 	.area _GSINIT
                             38 ;sprites.c:26: unsigned char Character[] =
   0000 21r00r00             39 	ld	hl, #_Character
   0003 36 7E                40 	ld	(hl), #0x7e
   0005 21r01r00             41 	ld	hl, #(_Character + 0x0001)
   0008 36 7E                42 	ld	(hl), #0x7e
   000A 21r02r00             43 	ld	hl, #(_Character + 0x0002)
   000D 36 7E                44 	ld	(hl), #0x7e
   000F 21r03r00             45 	ld	hl, #(_Character + 0x0003)
   0012 36 6E                46 	ld	(hl), #0x6e
   0014 21r04r00             47 	ld	hl, #(_Character + 0x0004)
   0017 36 7E                48 	ld	(hl), #0x7e
   0019 21r05r00             49 	ld	hl, #(_Character + 0x0005)
   001C 36 4A                50 	ld	(hl), #0x4a
   001E 21r06r00             51 	ld	hl, #(_Character + 0x0006)
   0021 36 7E                52 	ld	(hl), #0x7e
   0023 21r07r00             53 	ld	hl, #(_Character + 0x0007)
   0026 36 42                54 	ld	(hl), #0x42
   0028 21r08r00             55 	ld	hl, #(_Character + 0x0008)
   002B 36 3C                56 	ld	(hl), #0x3c
   002D 21r09r00             57 	ld	hl, #(_Character + 0x0009)
   0030 36 3C                58 	ld	(hl), #0x3c
   0032 21r0Ar00             59 	ld	hl, #(_Character + 0x000a)
   0035 36 24                60 	ld	(hl), #0x24
   0037 21r0Br00             61 	ld	hl, #(_Character + 0x000b)
   003A 36 3C                62 	ld	(hl), #0x3c
   003C 21r0Cr00             63 	ld	hl, #(_Character + 0x000c)
   003F 36 24                64 	ld	(hl), #0x24
   0041 21r0Dr00             65 	ld	hl, #(_Character + 0x000d)
   0044 36 3C                66 	ld	(hl), #0x3c
   0046 21r0Er00             67 	ld	hl, #(_Character + 0x000e)
   0049 36 3C                68 	ld	(hl), #0x3c
   004B 21r0Fr00             69 	ld	hl, #(_Character + 0x000f)
   004E 36 3C                70 	ld	(hl), #0x3c
   0050 21r10r00             71 	ld	hl, #(_Character + 0x0010)
   0053 36 7E                72 	ld	(hl), #0x7e
   0055 21r11r00             73 	ld	hl, #(_Character + 0x0011)
   0058 36 7E                74 	ld	(hl), #0x7e
   005A 21r12r00             75 	ld	hl, #(_Character + 0x0012)
   005D 36 7E                76 	ld	(hl), #0x7e
   005F 21r13r00             77 	ld	hl, #(_Character + 0x0013)
   0062 36 76                78 	ld	(hl), #0x76
   0064 21r14r00             79 	ld	hl, #(_Character + 0x0014)
   0067 36 7E                80 	ld	(hl), #0x7e
   0069 21r15r00             81 	ld	hl, #(_Character + 0x0015)
   006C 36 52                82 	ld	(hl), #0x52
   006E 21r16r00             83 	ld	hl, #(_Character + 0x0016)
   0071 36 7E                84 	ld	(hl), #0x7e
   0073 21r17r00             85 	ld	hl, #(_Character + 0x0017)
   0076 36 42                86 	ld	(hl), #0x42
   0078 21r18r00             87 	ld	hl, #(_Character + 0x0018)
   007B 36 3C                88 	ld	(hl), #0x3c
   007D 21r19r00             89 	ld	hl, #(_Character + 0x0019)
   0080 36 3C                90 	ld	(hl), #0x3c
   0082 21r1Ar00             91 	ld	hl, #(_Character + 0x001a)
   0085 36 24                92 	ld	(hl), #0x24
   0087 21r1Br00             93 	ld	hl, #(_Character + 0x001b)
   008A 36 3C                94 	ld	(hl), #0x3c
   008C 21r1Cr00             95 	ld	hl, #(_Character + 0x001c)
   008F 36 24                96 	ld	(hl), #0x24
   0091 21r1Dr00             97 	ld	hl, #(_Character + 0x001d)
   0094 36 3C                98 	ld	(hl), #0x3c
   0096 21r1Er00             99 	ld	hl, #(_Character + 0x001e)
   0099 36 3C               100 	ld	(hl), #0x3c
   009B 21r1Fr00            101 	ld	hl, #(_Character + 0x001f)
   009E 36 3C               102 	ld	(hl), #0x3c
                            103 ;--------------------------------------------------------
                            104 ; Home
                            105 ;--------------------------------------------------------
                            106 	.area _HOME
                            107 	.area _HOME
                            108 ;--------------------------------------------------------
                            109 ; code
                            110 ;--------------------------------------------------------
                            111 	.area _CODE
                            112 ;main.c:5: void main()
                            113 ;	---------------------------------
                            114 ; Function main
                            115 ; ---------------------------------
   0000                     116 _main::
                            117 ;main.c:7: UINT8 currentspriteindex = 0;
   0000 06 00               118 	ld	b, #0x00
                            119 ;main.c:8: set_sprite_data(0, 2, Character);
   0002 C5                  120 	push	bc
   0003 21r00r00            121 	ld	hl, #_Character
   0006 E5                  122 	push	hl
   0007 3E 02               123 	ld	a, #0x02
   0009 F5                  124 	push	af
   000A 33                  125 	inc	sp
   000B AF                  126 	xor	a, a
   000C F5                  127 	push	af
   000D 33                  128 	inc	sp
   000E CDr00r00            129 	call	_set_sprite_data
   0011 E8 04               130 	add	sp, #4
   0013 C1                  131 	pop	bc
                            132 ;main.c:9: set_sprite_tile(0, 0);
   0014 C5                  133 	push	bc
   0015 AF                  134 	xor	a, a
   0016 F5                  135 	push	af
   0017 33                  136 	inc	sp
   0018 AF                  137 	xor	a, a
   0019 F5                  138 	push	af
   001A 33                  139 	inc	sp
   001B CDr00r00            140 	call	_set_sprite_tile
   001E E8 02               141 	add	sp, #2
   0020 C1                  142 	pop	bc
                            143 ;main.c:10: move_sprite(0, 88, 78);
   0021 C5                  144 	push	bc
   0022 3E 4E               145 	ld	a, #0x4e
   0024 F5                  146 	push	af
   0025 33                  147 	inc	sp
   0026 3E 58               148 	ld	a, #0x58
   0028 F5                  149 	push	af
   0029 33                  150 	inc	sp
   002A AF                  151 	xor	a, a
   002B F5                  152 	push	af
   002C 33                  153 	inc	sp
   002D CDr00r00            154 	call	_move_sprite
   0030 E8 03               155 	add	sp, #3
   0032 C1                  156 	pop	bc
                            157 ;main.c:12: SHOW_SPRITES; //display sprites
   0033 21 40 FF            158 	ld	hl, #0xff40
   0036 7E                  159 	ld	a, (hl)
   0037 CB CF               160 	set	1, a
   0039 21 40 FF            161 	ld	hl, #0xff40
   003C 77                  162 	ld	(hl), a
                            163 ;main.c:14: while (1)
   003D                     164 00105$:
                            165 ;main.c:16: if (currentspriteindex == 0)
   003D 78                  166 	ld	a, b
   003E B7                  167 	or	a, a
   003F 20 04               168 	jr	NZ,00102$
                            169 ;main.c:18: currentspriteindex = 1;
   0041 06 01               170 	ld	b, #0x01
   0043 18 02               171 	jr	00103$
   0045                     172 00102$:
                            173 ;main.c:22: currentspriteindex = 0;
   0045 06 00               174 	ld	b, #0x00
   0047                     175 00103$:
                            176 ;main.c:24: set_sprite_tile(0, currentspriteindex);
   0047 C5                  177 	push	bc
   0048 C5                  178 	push	bc
   0049 33                  179 	inc	sp
   004A AF                  180 	xor	a, a
   004B F5                  181 	push	af
   004C 33                  182 	inc	sp
   004D CDr00r00            183 	call	_set_sprite_tile
   0050 E8 02               184 	add	sp, #2
   0052 C1                  185 	pop	bc
                            186 ;main.c:25: delay(1000);
   0053 C5                  187 	push	bc
   0054 21 E8 03            188 	ld	hl, #0x03e8
   0057 E5                  189 	push	hl
   0058 CDr00r00            190 	call	_delay
   005B E8 02               191 	add	sp, #2
   005D C1                  192 	pop	bc
                            193 ;main.c:26: scroll_sprite(0, 10, 0);
   005E C5                  194 	push	bc
   005F AF                  195 	xor	a, a
   0060 F5                  196 	push	af
   0061 33                  197 	inc	sp
   0062 3E 0A               198 	ld	a, #0x0a
   0064 F5                  199 	push	af
   0065 33                  200 	inc	sp
   0066 AF                  201 	xor	a, a
   0067 F5                  202 	push	af
   0068 33                  203 	inc	sp
   0069 CDr00r00            204 	call	_scroll_sprite
   006C E8 03               205 	add	sp, #3
   006E C1                  206 	pop	bc
   006F C3r3Dr00            207 	jp	00105$
                            208 ;main.c:28: }
   0072 C9                  209 	ret
                            210 	.area _CODE
                            211 	.area _CABS (ABS)
